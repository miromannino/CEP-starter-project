{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/assets/style/index.scss","webpack:///./node_modules/css-loader/dist/runtime/api.js","webpack:///./src/js/CSInterface.js","webpack:///./node_modules/script-loader/addScript.js","webpack:///./src/js/CSInterface.js?7e6c","webpack:///./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack:///./src/assets/style/index.scss?4cf8","webpack:///./src/js/index.js","webpack:///./src/js/utils.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA;AACA,kCAAkC,mBAAO,CAAC,2GAAsD;AAChG;AACA;AACA,cAAc,QAAS,SAAS,iBAAiB,4BAA4B,EAAE;AAC/E;AACA;;;;;;;;;;;;;ACNa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;;AAEhB;AACA;AACA;;AAEA;AACA,4CAA4C,qBAAqB;AACjE;;AAEA;AACA,KAAK;AACL,IAAI;AACJ;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,qBAAqB,iBAAiB;AACtC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,qBAAqB;AACzC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,8BAA8B;;AAE9B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,CAAC;;;AAGD;AACA;AACA;AACA,qDAAqD,cAAc;AACnE;AACA,C;;;;;;;;;;;AC7FA,+xBAA+xB,GAAG,uFAAuF,gGAAgG,0GAA0G,mFAAmF,4JAA4J,ueAAue,yBAAyB,yBAAyB,yBAAyB,6BAA6B,GAAG,0LAA0L,8ZAA8Z,6BAA6B,iCAAiC,GAAG,iXAAiX,mCAAmC,mCAAmC,GAAG,uZAAuZ,uBAAuB,uCAAuC,GAAG,25DAA25D,mBAAmB,uBAAuB,+BAA+B,+BAA+B,mCAAmC,yBAAyB,2BAA2B,+BAA+B,iCAAiC,+BAA+B,iCAAiC,6DAA6D,6DAA6D,qDAAqD,yCAAyC,iDAAiD,GAAG,4fAA4f,uBAAuB,yBAAyB,yBAAyB,qCAAqC,GAAG,+DAA+D,yNAAyN,GAAG,wEAAwE,wGAAwG,uGAAuG,kGAAkG,iFAAiF,6GAA6G,2FAA2F,GAAG,oDAAoD,mEAAmE,uDAAuD,6nBAA6nB,qBAAqB,yBAAyB,uBAAuB,yBAAyB,GAAG,qcAAqc,iBAAiB,iBAAiB,GAAG,qUAAqU,2BAA2B,+BAA+B,GAAG,6gBAA6gB,uBAAuB,iCAAiC,+BAA+B,6CAA6C,GAAG,4kBAA4kB,uBAAuB,2CAA2C,yBAAyB,GAAG,ojCAAojC,2CAA2C,uCAAuC,yDAAyD,uDAAuD,iEAAiE,+DAA+D,uDAAuD,GAAG,ouBAAouB,6BAA6B,mCAAmC,iCAAiC,qCAAqC,yBAAyB,qCAAqC,qCAAqC,GAAG,+rBAA+rB,qDAAqD,uDAAuD,qDAAqD,6DAA6D,+DAA+D,kBAAkB,wRAAwR,yBAAyB,yBAAyB,yBAAyB,GAAG,+XAA+X,yCAAyC,6BAA6B,6BAA6B,GAAG,oZAAoZ,mCAAmC,6BAA6B,6BAA6B,GAAG,ugBAAugB,GAAG,2YAA2Y,gKAAgK,qKAAqK,2FAA2F,0KAA0K,0NAA0N,mFAAmF,kCAAkC,IAAI,oZAAoZ,2CAA2C,EAAE,EAAE,wEAAwE,gBAAgB,yCAAyC,2CAA2C,yEAAyE,8CAA8C,kEAAkE,uBAAuB,QAAQ,qBAAqB,8BAA8B,8DAA8D,kEAAkE,6BAA6B,eAAe,uEAAuE,uEAAuE,eAAe,WAAW,OAAO,uBAAuB,2BAA2B,uBAAuB,OAAO,kBAAkB,IAAI,yQAAyQ,8BAA8B,gEAAgE,gBAAgB,kDAAkD,yDAAyD,qEAAqE,iEAAiE,eAAe,sEAAsE,iEAAiE,eAAe,0DAA0D,0BAA0B,WAAW,OAAO,uBAAuB,2BAA2B,uBAAuB,OAAO,uDAAuD,IAAI,uFAAuF,4CAA4C,IAAI,mRAAmR,yEAAyE,8CAA8C,qDAAqD,gDAAgD,OAAO,sDAAsD,+CAA+C,OAAO,kBAAkB,IAAI,saAAsa,4DAA4D,wCAAwC,OAAO,wDAAwD,IAAI,mNAAmN,6CAA6C,mBAAmB,IAAI,sOAAsO,qFAAqF,8BAA8B,IAAI,yPAAyP,iDAAiD,kDAAkD,OAAO,kDAAkD,IAAI,0jBAA0jB,iEAAiE,IAAI,uYAAuY,oEAAoE,IAAI,qXAAqX,gGAAgG,qEAAqE,IAAI,oeAAoe,yDAAyD,8EAA8E,mDAAmD,wBAAwB,IAAI,wLAAwL,gEAAgE,0CAA0C,0BAA0B,IAAI,iyBAAiyB,iFAAiF,+DAA+D,qBAAqB,oBAAoB,YAAY,gCAAgC,0GAA0G,8BAA8B,wHAAwH,iEAAiE,wDAAwD,2EAA2E,qDAAqD,sBAAsB,qFAAqF,yEAAyE,oDAAoD,sBAAsB,kBAAkB,cAAc,UAAU,OAAO,4BAA4B,IAAI,sJAAsJ,yDAAyD,IAAI,6cAA6c,0CAA0C,4FAA4F,uCAAuC,4BAA4B,6DAA6D,4EAA4E,gDAAgD,eAAe,iFAAiF,8CAA8C,eAAe,iFAAiF,uDAAuD,eAAe,iFAAiF,iDAAiD,eAAe,iFAAiF,6CAA6C,eAAe,iFAAiF,6CAA6C,eAAe,iFAAiF,+CAA+C,eAAe,gFAAgF,8CAA8C,eAAe,0GAA0G,uCAAuC,eAAe,iCAAiC,uCAAuC,eAAe,WAAW,uCAAuC,OAAO,oGAAoG,oCAAoC,gEAAgE,sGAAsG,mDAAmD,WAAW,0BAA0B,OAAO,4CAA4C,IAAI,gpBAAgpB,mDAAmD,IAAI,gJAAgJ,oDAAoD,IAAI,4hBAA4hB,mDAAmD,IAAI,qNAAqN,qEAAqE,8DAA8D,QAAQ,GAAG,iRAAiR,iEAAiE,IAAI,sKAAsK,+EAA+E,wBAAwB,IAAI,8pCAA8pC,2CAA2C,iBAAiB,OAAO,sEAAsE,IAAI,qqBAAqqB,sBAAsB,gEAAgE,+EAA+E,qGAAqG,OAAO,iBAAiB,IAAI,+3DAA+3D,2CAA2C,iBAAiB,OAAO,6EAA6E,IAAI,4mCAA4mC,oCAAoC,6QAA6Q,gBAAgB,4IAA4I,gLAAgL,6TAA6T,kDAAkD,wBAAwB,wQAAwQ,kCAAkC,gBAAgB,mDAAmD,gBAAgB,sNAAsN,kBAAkB,mFAAmF,2CAA2C,iBAAiB,OAAO,mFAAmF,IAAI,kZAAkZ,+EAA+E,mGAAmG,IAAI,0IAA0I,qGAAqG,wEAAwE,IAAI,kuBAAkuB,wDAAwD,IAAI,2gBAA2gB,+EAA+E,IAAI,2oDAA2oD,sCAAsC,WAAW,sEAAsE,WAAW,qGAAqG,iGAAiG,+EAA+E,IAAI,4VAA4V,iEAAiE,IAAI,kVAAkV,uEAAuE,IAAI,G;;;;;;;;;;;ACAj/2C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;AACA;;;;;;;;;;;;AC1BA,mBAAO,CAAC,6FAAoG,EAAE,mBAAO,CAAC,sHAA4K,E;;;;;;;;;;;;ACArR;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,uDAAuD;;AAEvD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;;AAEA,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gBAAgB,KAAwC,GAAG,sBAAiB,GAAG,SAAI;;AAEnF;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,qEAAqE,qBAAqB,aAAa;;AAEvG;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA,yDAAyD;AACzD,GAAG;;AAEH;;;AAGA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,0BAA0B;AAC1B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,4BAA4B;AAC/C;AACA;AACA;AACA;;AAEA;;AAEA,oBAAoB,6BAA6B;AACjD;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,E;;;;;;;;;;;AC5QA,UAAU,mBAAO,CAAC,yJAA8E;AAChG,0BAA0B,mBAAO,CAAC,4NAA2G;;AAE7I;;AAEA;AACA,0BAA0B,QAAS;AACnC;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;;;AAIA,0B;;;;;;;;;;;;ACpBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwC;;AAEA;;AAEJ;;AAEpC;;AAEA,8DAAe;;;;;;;;;;;;ACRf;AACA;AACA;AACA;;AAEA;AACA;AACA,C","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/js/index.js\");\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"body {\\n  color: black;\\n  background-color: white; }\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join('');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring\n\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || '').concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n  return \"/*# \".concat(data, \" */\");\n}","module.exports = \"/**************************************************************************************************\\n*\\n* ADOBE SYSTEMS INCORPORATED\\n* Copyright 2013 Adobe Systems Incorporated\\n* All Rights Reserved.\\n*\\n* NOTICE:  Adobe permits you to use, modify, and distribute this file in accordance with the\\n* terms of the Adobe license agreement accompanying it.  If you have received this file from a\\n* source other than Adobe, then your use, modification, or distribution of it requires the prior\\n* written permission of Adobe.\\n*\\n**************************************************************************************************/\\n\\n/** CSInterface - v9.4.0 */\\n\\n/**\\n * Stores constants for the window types supported by the CSXS infrastructure.\\n */\\nfunction CSXSWindowType()\\n{\\n}\\n\\n/** Constant for the CSXS window type Panel. */\\nCSXSWindowType._PANEL = \\\"Panel\\\";\\n\\n/** Constant for the CSXS window type Modeless. */\\nCSXSWindowType._MODELESS = \\\"Modeless\\\";\\n\\n/** Constant for the CSXS window type ModalDialog. */\\nCSXSWindowType._MODAL_DIALOG = \\\"ModalDialog\\\";\\n\\n/** EvalScript error message */\\nEvalScript_ErrMessage = \\\"EvalScript error.\\\";\\n\\n/**\\n * @class Version\\n * Defines a version number with major, minor, micro, and special\\n * components. The major, minor and micro values are numeric; the special\\n * value can be any string.\\n *\\n * @param major   The major version component, a positive integer up to nine digits long.\\n * @param minor   The minor version component, a positive integer up to nine digits long.\\n * @param micro   The micro version component, a positive integer up to nine digits long.\\n * @param special The special version component, an arbitrary string.\\n *\\n * @return A new \\\\c Version object.\\n */\\nfunction Version(major, minor, micro, special)\\n{\\n    this.major = major;\\n    this.minor = minor;\\n    this.micro = micro;\\n    this.special = special;\\n}\\n\\n/**\\n * The maximum value allowed for a numeric version component.\\n * This reflects the maximum value allowed in PlugPlug and the manifest schema.\\n */\\nVersion.MAX_NUM = 999999999;\\n\\n/**\\n * @class VersionBound\\n * Defines a boundary for a version range, which associates a \\\\c Version object\\n * with a flag for whether it is an inclusive or exclusive boundary.\\n *\\n * @param version   The \\\\c #Version object.\\n * @param inclusive True if this boundary is inclusive, false if it is exclusive.\\n *\\n * @return A new \\\\c VersionBound object.\\n */\\nfunction VersionBound(version, inclusive)\\n{\\n    this.version = version;\\n    this.inclusive = inclusive;\\n}\\n\\n/**\\n * @class VersionRange\\n * Defines a range of versions using a lower boundary and optional upper boundary.\\n *\\n * @param lowerBound The \\\\c #VersionBound object.\\n * @param upperBound The \\\\c #VersionBound object, or null for a range with no upper boundary.\\n *\\n * @return A new \\\\c VersionRange object.\\n */\\nfunction VersionRange(lowerBound, upperBound)\\n{\\n    this.lowerBound = lowerBound;\\n    this.upperBound = upperBound;\\n}\\n\\n/**\\n * @class Runtime\\n * Represents a runtime related to the CEP infrastructure.\\n * Extensions can declare dependencies on particular\\n * CEP runtime versions in the extension manifest.\\n *\\n * @param name    The runtime name.\\n * @param version A \\\\c #VersionRange object that defines a range of valid versions.\\n *\\n * @return A new \\\\c Runtime object.\\n */\\nfunction Runtime(name, versionRange)\\n{\\n    this.name = name;\\n    this.versionRange = versionRange;\\n}\\n\\n/**\\n* @class Extension\\n* Encapsulates a CEP-based extension to an Adobe application.\\n*\\n* @param id              The unique identifier of this extension.\\n* @param name            The localizable display name of this extension.\\n* @param mainPath        The path of the \\\"index.html\\\" file.\\n* @param basePath        The base path of this extension.\\n* @param windowType          The window type of the main window of this extension.\\n                 Valid values are defined by \\\\c #CSXSWindowType.\\n* @param width           The default width in pixels of the main window of this extension.\\n* @param height          The default height in pixels of the main window of this extension.\\n* @param minWidth        The minimum width in pixels of the main window of this extension.\\n* @param minHeight       The minimum height in pixels of the main window of this extension.\\n* @param maxWidth        The maximum width in pixels of the main window of this extension.\\n* @param maxHeight       The maximum height in pixels of the main window of this extension.\\n* @param defaultExtensionDataXml The extension data contained in the default \\\\c ExtensionDispatchInfo section of the extension manifest.\\n* @param specialExtensionDataXml The extension data contained in the application-specific \\\\c ExtensionDispatchInfo section of the extension manifest.\\n* @param requiredRuntimeList     An array of \\\\c Runtime objects for runtimes required by this extension.\\n* @param isAutoVisible       True if this extension is visible on loading.\\n* @param isPluginExtension   True if this extension has been deployed in the Plugins folder of the host application.\\n*\\n* @return A new \\\\c Extension object.\\n*/\\nfunction Extension(id, name, mainPath, basePath, windowType, width, height, minWidth, minHeight, maxWidth, maxHeight,\\n                   defaultExtensionDataXml, specialExtensionDataXml, requiredRuntimeList, isAutoVisible, isPluginExtension)\\n{\\n    this.id = id;\\n    this.name = name;\\n    this.mainPath = mainPath;\\n    this.basePath = basePath;\\n    this.windowType = windowType;\\n    this.width = width;\\n    this.height = height;\\n    this.minWidth = minWidth;\\n    this.minHeight = minHeight;\\n    this.maxWidth = maxWidth;\\n    this.maxHeight = maxHeight;\\n    this.defaultExtensionDataXml = defaultExtensionDataXml;\\n    this.specialExtensionDataXml = specialExtensionDataXml;\\n    this.requiredRuntimeList = requiredRuntimeList;\\n    this.isAutoVisible = isAutoVisible;\\n    this.isPluginExtension = isPluginExtension;\\n}\\n\\n/**\\n * @class CSEvent\\n * A standard JavaScript event, the base class for CEP events.\\n *\\n * @param type        The name of the event type.\\n * @param scope       The scope of event, can be \\\"GLOBAL\\\" or \\\"APPLICATION\\\".\\n * @param appId       The unique identifier of the application that generated the event.\\n * @param extensionId     The unique identifier of the extension that generated the event.\\n *\\n * @return A new \\\\c CSEvent object\\n */\\nfunction CSEvent(type, scope, appId, extensionId)\\n{\\n    this.type = type;\\n    this.scope = scope;\\n    this.appId = appId;\\n    this.extensionId = extensionId;\\n}\\n\\n/** Event-specific data. */\\nCSEvent.prototype.data = \\\"\\\";\\n\\n/**\\n * @class SystemPath\\n * Stores operating-system-specific location constants for use in the\\n * \\\\c #CSInterface.getSystemPath() method.\\n * @return A new \\\\c SystemPath object.\\n */\\nfunction SystemPath()\\n{\\n}\\n\\n/** The path to user data.  */\\nSystemPath.USER_DATA = \\\"userData\\\";\\n\\n/** The path to common files for Adobe applications.  */\\nSystemPath.COMMON_FILES = \\\"commonFiles\\\";\\n\\n/** The path to the user's default document folder.  */\\nSystemPath.MY_DOCUMENTS = \\\"myDocuments\\\";\\n\\n/** @deprecated. Use \\\\c #SystemPath.Extension.  */\\nSystemPath.APPLICATION = \\\"application\\\";\\n\\n/** The path to current extension.  */\\nSystemPath.EXTENSION = \\\"extension\\\";\\n\\n/** The path to hosting application's executable.  */\\nSystemPath.HOST_APPLICATION = \\\"hostApplication\\\";\\n\\n/**\\n * @class ColorType\\n * Stores color-type constants.\\n */\\nfunction ColorType()\\n{\\n}\\n\\n/** RGB color type. */\\nColorType.RGB = \\\"rgb\\\";\\n\\n/** Gradient color type. */\\nColorType.GRADIENT = \\\"gradient\\\";\\n\\n/** Null color type. */\\nColorType.NONE = \\\"none\\\";\\n\\n/**\\n * @class RGBColor\\n * Stores an RGB color with red, green, blue, and alpha values.\\n * All values are in the range [0.0 to 255.0]. Invalid numeric values are\\n * converted to numbers within this range.\\n *\\n * @param red   The red value, in the range [0.0 to 255.0].\\n * @param green The green value, in the range [0.0 to 255.0].\\n * @param blue  The blue value, in the range [0.0 to 255.0].\\n * @param alpha The alpha (transparency) value, in the range [0.0 to 255.0].\\n *      The default, 255.0, means that the color is fully opaque.\\n *\\n * @return A new RGBColor object.\\n */\\nfunction RGBColor(red, green, blue, alpha)\\n{\\n    this.red = red;\\n    this.green = green;\\n    this.blue = blue;\\n    this.alpha = alpha;\\n}\\n\\n/**\\n * @class Direction\\n * A point value  in which the y component is 0 and the x component\\n * is positive or negative for a right or left direction,\\n * or the x component is 0 and the y component is positive or negative for\\n * an up or down direction.\\n *\\n * @param x     The horizontal component of the point.\\n * @param y     The vertical component of the point.\\n *\\n * @return A new \\\\c Direction object.\\n */\\nfunction Direction(x, y)\\n{\\n    this.x = x;\\n    this.y = y;\\n}\\n\\n/**\\n * @class GradientStop\\n * Stores gradient stop information.\\n *\\n * @param offset   The offset of the gradient stop, in the range [0.0 to 1.0].\\n * @param rgbColor The color of the gradient at this point, an \\\\c #RGBColor object.\\n *\\n * @return GradientStop object.\\n */\\nfunction GradientStop(offset, rgbColor)\\n{\\n    this.offset = offset;\\n    this.rgbColor = rgbColor;\\n}\\n\\n/**\\n * @class GradientColor\\n * Stores gradient color information.\\n *\\n * @param type          The gradient type, must be \\\"linear\\\".\\n * @param direction     A \\\\c #Direction object for the direction of the gradient\\n                (up, down, right, or left).\\n * @param numStops          The number of stops in the gradient.\\n * @param gradientStopList  An array of \\\\c #GradientStop objects.\\n *\\n * @return A new \\\\c GradientColor object.\\n */\\nfunction GradientColor(type, direction, numStops, arrGradientStop)\\n{\\n    this.type = type;\\n    this.direction = direction;\\n    this.numStops = numStops;\\n    this.arrGradientStop = arrGradientStop;\\n}\\n\\n/**\\n * @class UIColor\\n * Stores color information, including the type, anti-alias level, and specific color\\n * values in a color object of an appropriate type.\\n *\\n * @param type          The color type, 1 for \\\"rgb\\\" and 2 for \\\"gradient\\\".\\n                The supplied color object must correspond to this type.\\n * @param antialiasLevel    The anti-alias level constant.\\n * @param color         A \\\\c #RGBColor or \\\\c #GradientColor object containing specific color information.\\n *\\n * @return A new \\\\c UIColor object.\\n */\\nfunction UIColor(type, antialiasLevel, color)\\n{\\n    this.type = type;\\n    this.antialiasLevel = antialiasLevel;\\n    this.color = color;\\n}\\n\\n/**\\n * @class AppSkinInfo\\n * Stores window-skin properties, such as color and font. All color parameter values are \\\\c #UIColor objects except that systemHighlightColor is \\\\c #RGBColor object.\\n *\\n * @param baseFontFamily        The base font family of the application.\\n * @param baseFontSize          The base font size of the application.\\n * @param appBarBackgroundColor     The application bar background color.\\n * @param panelBackgroundColor      The background color of the extension panel.\\n * @param appBarBackgroundColorSRGB     The application bar background color, as sRGB.\\n * @param panelBackgroundColorSRGB      The background color of the extension panel, as sRGB.\\n * @param systemHighlightColor          The highlight color of the extension panel, if provided by the host application. Otherwise, the operating-system highlight color.\\n *\\n * @return AppSkinInfo object.\\n */\\nfunction AppSkinInfo(baseFontFamily, baseFontSize, appBarBackgroundColor, panelBackgroundColor, appBarBackgroundColorSRGB, panelBackgroundColorSRGB, systemHighlightColor)\\n{\\n    this.baseFontFamily = baseFontFamily;\\n    this.baseFontSize = baseFontSize;\\n    this.appBarBackgroundColor = appBarBackgroundColor;\\n    this.panelBackgroundColor = panelBackgroundColor;\\n    this.appBarBackgroundColorSRGB = appBarBackgroundColorSRGB;\\n    this.panelBackgroundColorSRGB = panelBackgroundColorSRGB;\\n    this.systemHighlightColor = systemHighlightColor;\\n}\\n\\n/**\\n * @class HostEnvironment\\n * Stores information about the environment in which the extension is loaded.\\n *\\n * @param appName   The application's name.\\n * @param appVersion    The application's version.\\n * @param appLocale The application's current license locale.\\n * @param appUILocale   The application's current UI locale.\\n * @param appId     The application's unique identifier.\\n * @param isAppOnline  True if the application is currently online.\\n * @param appSkinInfo   An \\\\c #AppSkinInfo object containing the application's default color and font styles.\\n *\\n * @return A new \\\\c HostEnvironment object.\\n */\\nfunction HostEnvironment(appName, appVersion, appLocale, appUILocale, appId, isAppOnline, appSkinInfo)\\n{\\n    this.appName = appName;\\n    this.appVersion = appVersion;\\n    this.appLocale = appLocale;\\n    this.appUILocale = appUILocale;\\n    this.appId = appId;\\n    this.isAppOnline = isAppOnline;\\n    this.appSkinInfo = appSkinInfo;\\n}\\n\\n/**\\n * @class HostCapabilities\\n * Stores information about the host capabilities.\\n *\\n * @param EXTENDED_PANEL_MENU True if the application supports panel menu.\\n * @param EXTENDED_PANEL_ICONS True if the application supports panel icon.\\n * @param DELEGATE_APE_ENGINE True if the application supports delegated APE engine.\\n * @param SUPPORT_HTML_EXTENSIONS True if the application supports HTML extensions.\\n * @param DISABLE_FLASH_EXTENSIONS True if the application disables FLASH extensions.\\n *\\n * @return A new \\\\c HostCapabilities object.\\n */\\nfunction HostCapabilities(EXTENDED_PANEL_MENU, EXTENDED_PANEL_ICONS, DELEGATE_APE_ENGINE, SUPPORT_HTML_EXTENSIONS, DISABLE_FLASH_EXTENSIONS)\\n{\\n    this.EXTENDED_PANEL_MENU = EXTENDED_PANEL_MENU;\\n    this.EXTENDED_PANEL_ICONS = EXTENDED_PANEL_ICONS;\\n    this.DELEGATE_APE_ENGINE = DELEGATE_APE_ENGINE;\\n    this.SUPPORT_HTML_EXTENSIONS = SUPPORT_HTML_EXTENSIONS;\\n    this.DISABLE_FLASH_EXTENSIONS = DISABLE_FLASH_EXTENSIONS; // Since 5.0.0\\n}\\n\\n/**\\n * @class ApiVersion\\n * Stores current api version.\\n *\\n * Since 4.2.0\\n *\\n * @param major  The major version\\n * @param minor  The minor version.\\n * @param micro  The micro version.\\n *\\n * @return ApiVersion object.\\n */\\nfunction ApiVersion(major, minor, micro)\\n{\\n    this.major = major;\\n    this.minor = minor;\\n    this.micro = micro;\\n}\\n\\n/**\\n * @class MenuItemStatus\\n * Stores flyout menu item status\\n *\\n * Since 5.2.0\\n *\\n * @param menuItemLabel  The menu item label.\\n * @param enabled        True if user wants to enable the menu item.\\n * @param checked        True if user wants to check the menu item.\\n *\\n * @return MenuItemStatus object.\\n */\\nfunction MenuItemStatus(menuItemLabel, enabled, checked)\\n{\\n    this.menuItemLabel = menuItemLabel;\\n    this.enabled = enabled;\\n    this.checked = checked;\\n}\\n\\n/**\\n * @class ContextMenuItemStatus\\n * Stores the status of the context menu item.\\n *\\n * Since 5.2.0\\n *\\n * @param menuItemID     The menu item id.\\n * @param enabled        True if user wants to enable the menu item.\\n * @param checked        True if user wants to check the menu item.\\n *\\n * @return MenuItemStatus object.\\n */\\nfunction ContextMenuItemStatus(menuItemID, enabled, checked)\\n{\\n    this.menuItemID = menuItemID;\\n    this.enabled = enabled;\\n    this.checked = checked;\\n}\\n//------------------------------ CSInterface ----------------------------------\\n\\n/**\\n * @class CSInterface\\n * This is the entry point to the CEP extensibility infrastructure.\\n * Instantiate this object and use it to:\\n * <ul>\\n * <li>Access information about the host application in which an extension is running</li>\\n * <li>Launch an extension</li>\\n * <li>Register interest in event notifications, and dispatch events</li>\\n * </ul>\\n *\\n * @return A new \\\\c CSInterface object\\n */\\nfunction CSInterface()\\n{\\n}\\n\\n/**\\n * User can add this event listener to handle native application theme color changes.\\n * Callback function gives extensions ability to fine-tune their theme color after the\\n * global theme color has been changed.\\n * The callback function should be like below:\\n *\\n * @example\\n * // event is a CSEvent object, but user can ignore it.\\n * function OnAppThemeColorChanged(event)\\n * {\\n *    // Should get a latest HostEnvironment object from application.\\n *    var skinInfo = JSON.parse(window.__adobe_cep__.getHostEnvironment()).appSkinInfo;\\n *    // Gets the style information such as color info from the skinInfo,\\n *    // and redraw all UI controls of your extension according to the style info.\\n * }\\n */\\nCSInterface.THEME_COLOR_CHANGED_EVENT = \\\"com.adobe.csxs.events.ThemeColorChanged\\\";\\n\\n/** The host environment data object. */\\nCSInterface.prototype.hostEnvironment = window.__adobe_cep__ ? JSON.parse(window.__adobe_cep__.getHostEnvironment()) : null;\\n\\n/** Retrieves information about the host environment in which the\\n *  extension is currently running.\\n *\\n *   @return A \\\\c #HostEnvironment object.\\n */\\nCSInterface.prototype.getHostEnvironment = function()\\n{\\n    this.hostEnvironment = JSON.parse(window.__adobe_cep__.getHostEnvironment());\\n    return this.hostEnvironment;\\n};\\n\\n/** Loads binary file created which is located at url asynchronously\\n*\\n*@param urlName url at which binary file is located. Local files should start with 'file://'\\n*@param callback Optional. A callback function that returns after binary is loaded\\n\\n*@example\\n* To create JS binary use command ./cep_compiler test.js test.bin\\n* To load JS binary asyncronously\\n*   var CSLib = new CSInterface();\\n*   CSLib.loadBinAsync(url, function () { });\\n*/\\nCSInterface.prototype.loadBinAsync = function(urlName,callback)\\n{\\n    try\\n    {\\n        var xhr = new XMLHttpRequest();\\n        xhr.responseType = 'arraybuffer'; // make response as ArrayBuffer\\n        xhr.open('GET', urlName, true);\\n        xhr.onerror = function ()\\n        {\\n  \\t\\t  console.log(\\\"Unable to load snapshot from given URL\\\");\\n  \\t\\t  return false;\\n\\t\\t};\\n        xhr.send();\\n        xhr.onload = () => {\\n            window.__adobe_cep__.loadSnapshot(xhr.response);\\n            if (typeof callback === \\\"function\\\")\\n            {\\n                callback();\\n            }\\n            else if(typeof callback !== \\\"undefined\\\")\\n            {\\n                console.log(\\\"Provided callback is not a function\\\");\\n            }\\n        }\\n    }\\n    catch(err)\\n    {\\n        console.log(err);\\n        return false;\\n    }\\n\\n\\treturn true;\\n};\\n\\n/** Loads binary file created synchronously\\n*\\n*@param pathName the local path at which binary file is located\\n\\n*@example\\n* To create JS binary use command ./cep_compiler test.js test.bin\\n* To load JS binary syncronously\\n*   var CSLib = new CSInterface();\\n*   CSLib.loadBinSync(path);\\n*/\\nCSInterface.prototype.loadBinSync  = function(pathName)\\n{\\n    try\\n    {\\n        var OSVersion = this.getOSInformation();\\n        if(pathName.startsWith(\\\"file://\\\"))\\n        {\\n            if (OSVersion.indexOf(\\\"Windows\\\") >= 0)\\n            {\\n               pathName = pathName.replace(\\\"file:///\\\", \\\"\\\");\\n            }\\n            else if (OSVersion.indexOf(\\\"Mac\\\") >= 0)\\n            {\\n                pathName = pathName.replace(\\\"file://\\\", \\\"\\\");\\n            }\\n            window.__adobe_cep__.loadSnapshot(pathName);\\n            return true;\\n        }\\n    }\\n    catch(err)\\n    {\\n        console.log(err);\\n        return false;\\n    }\\n    //control should not come here\\n    return false;\\n};\\n\\n/** Closes this extension. */\\nCSInterface.prototype.closeExtension = function()\\n{\\n    window.__adobe_cep__.closeExtension();\\n};\\n\\n/**\\n * Retrieves a path for which a constant is defined in the system.\\n *\\n * @param pathType The path-type constant defined in \\\\c #SystemPath ,\\n *\\n * @return The platform-specific system path string.\\n */\\nCSInterface.prototype.getSystemPath = function(pathType)\\n{\\n    var path = decodeURI(window.__adobe_cep__.getSystemPath(pathType));\\n    var OSVersion = this.getOSInformation();\\n    if (OSVersion.indexOf(\\\"Windows\\\") >= 0)\\n    {\\n      path = path.replace(\\\"file:///\\\", \\\"\\\");\\n    }\\n    else if (OSVersion.indexOf(\\\"Mac\\\") >= 0)\\n    {\\n      path = path.replace(\\\"file://\\\", \\\"\\\");\\n    }\\n    return path;\\n};\\n\\n/**\\n * Evaluates a JavaScript script, which can use the JavaScript DOM\\n * of the host application.\\n *\\n * @param script    The JavaScript script.\\n * @param callback  Optional. A callback function that receives the result of execution.\\n *          If execution fails, the callback function receives the error message \\\\c EvalScript_ErrMessage.\\n */\\nCSInterface.prototype.evalScript = function(script, callback)\\n{\\n    if(callback === null || callback === undefined)\\n    {\\n        callback = function(result){};\\n    }\\n    window.__adobe_cep__.evalScript(script, callback);\\n};\\n\\n/**\\n * Retrieves the unique identifier of the application.\\n * in which the extension is currently running.\\n *\\n * @return The unique ID string.\\n */\\nCSInterface.prototype.getApplicationID = function()\\n{\\n    var appId = this.hostEnvironment.appId;\\n    return appId;\\n};\\n\\n/**\\n * Retrieves host capability information for the application\\n * in which the extension is currently running.\\n *\\n * @return A \\\\c #HostCapabilities object.\\n */\\nCSInterface.prototype.getHostCapabilities = function()\\n{\\n    var hostCapabilities = JSON.parse(window.__adobe_cep__.getHostCapabilities() );\\n    return hostCapabilities;\\n};\\n\\n/**\\n * Triggers a CEP event programmatically. Yoy can use it to dispatch\\n * an event of a predefined type, or of a type you have defined.\\n *\\n * @param event A \\\\c CSEvent object.\\n */\\nCSInterface.prototype.dispatchEvent = function(event)\\n{\\n    if (typeof event.data == \\\"object\\\")\\n    {\\n        event.data = JSON.stringify(event.data);\\n    }\\n\\n    window.__adobe_cep__.dispatchEvent(event);\\n};\\n\\n/**\\n * Registers an interest in a CEP event of a particular type, and\\n * assigns an event handler.\\n * The event infrastructure notifies your extension when events of this type occur,\\n * passing the event object to the registered handler function.\\n *\\n * @param type     The name of the event type of interest.\\n * @param listener The JavaScript handler function or method.\\n * @param obj      Optional, the object containing the handler method, if any.\\n *         Default is null.\\n */\\nCSInterface.prototype.addEventListener = function(type, listener, obj)\\n{\\n    window.__adobe_cep__.addEventListener(type, listener, obj);\\n};\\n\\n/**\\n * Removes a registered event listener.\\n *\\n * @param type      The name of the event type of interest.\\n * @param listener  The JavaScript handler function or method that was registered.\\n * @param obj       Optional, the object containing the handler method, if any.\\n *          Default is null.\\n */\\nCSInterface.prototype.removeEventListener = function(type, listener, obj)\\n{\\n    window.__adobe_cep__.removeEventListener(type, listener, obj);\\n};\\n\\n/**\\n * Loads and launches another extension, or activates the extension if it is already loaded.\\n *\\n * @param extensionId       The extension's unique identifier.\\n * @param startupParams     Not currently used, pass \\\"\\\".\\n *\\n * @example\\n * To launch the extension \\\"help\\\" with ID \\\"HLP\\\" from this extension, call:\\n * <code>requestOpenExtension(\\\"HLP\\\", \\\"\\\"); </code>\\n *\\n */\\nCSInterface.prototype.requestOpenExtension = function(extensionId, params)\\n{\\n    window.__adobe_cep__.requestOpenExtension(extensionId, params);\\n};\\n\\n/**\\n * Retrieves the list of extensions currently loaded in the current host application.\\n * The extension list is initialized once, and remains the same during the lifetime\\n * of the CEP session.\\n *\\n * @param extensionIds  Optional, an array of unique identifiers for extensions of interest.\\n *          If omitted, retrieves data for all extensions.\\n *\\n * @return Zero or more \\\\c #Extension objects.\\n */\\nCSInterface.prototype.getExtensions = function(extensionIds)\\n{\\n    var extensionIdsStr = JSON.stringify(extensionIds);\\n    var extensionsStr = window.__adobe_cep__.getExtensions(extensionIdsStr);\\n\\n    var extensions = JSON.parse(extensionsStr);\\n    return extensions;\\n};\\n\\n/**\\n * Retrieves network-related preferences.\\n *\\n * @return A JavaScript object containing network preferences.\\n */\\nCSInterface.prototype.getNetworkPreferences = function()\\n{\\n    var result = window.__adobe_cep__.getNetworkPreferences();\\n    var networkPre = JSON.parse(result);\\n\\n    return networkPre;\\n};\\n\\n/**\\n * Initializes the resource bundle for this extension with property values\\n * for the current application and locale.\\n * To support multiple locales, you must define a property file for each locale,\\n * containing keyed display-string values for that locale.\\n * See localization documentation for Extension Builder and related products.\\n *\\n * Keys can be in the\\n * form <code>key.value=\\\"localized string\\\"</code>, for use in HTML text elements.\\n * For example, in this input element, the localized \\\\c key.value string is displayed\\n * instead of the empty \\\\c value string:\\n *\\n * <code><input type=\\\"submit\\\" value=\\\"\\\" data-locale=\\\"key\\\"/></code>\\n *\\n * @return An object containing the resource bundle information.\\n */\\nCSInterface.prototype.initResourceBundle = function()\\n{\\n    var resourceBundle = JSON.parse(window.__adobe_cep__.initResourceBundle());\\n    var resElms = document.querySelectorAll('[data-locale]');\\n    for (var n = 0; n < resElms.length; n++)\\n    {\\n       var resEl = resElms[n];\\n       // Get the resource key from the element.\\n       var resKey = resEl.getAttribute('data-locale');\\n       if (resKey)\\n       {\\n           // Get all the resources that start with the key.\\n           for (var key in resourceBundle)\\n           {\\n               if (key.indexOf(resKey) === 0)\\n               {\\n                   var resValue = resourceBundle[key];\\n                   if (key.length == resKey.length)\\n                   {\\n                        resEl.innerHTML = resValue;\\n                   }\\n                   else if ('.' == key.charAt(resKey.length))\\n                   {\\n                        var attrKey = key.substring(resKey.length + 1);\\n                        resEl[attrKey] = resValue;\\n                   }\\n               }\\n           }\\n       }\\n    }\\n    return resourceBundle;\\n};\\n\\n/**\\n * Writes installation information to a file.\\n *\\n * @return The file path.\\n */\\nCSInterface.prototype.dumpInstallationInfo = function()\\n{\\n    return window.__adobe_cep__.dumpInstallationInfo();\\n};\\n\\n/**\\n * Retrieves version information for the current Operating System,\\n * See http://www.useragentstring.com/pages/Chrome/ for Chrome \\\\c navigator.userAgent values.\\n *\\n * @return A string containing the OS version, or \\\"unknown Operation System\\\".\\n * If user customizes the User Agent by setting CEF command parameter \\\"--user-agent\\\", only\\n * \\\"Mac OS X\\\" or \\\"Windows\\\" will be returned.\\n */\\nCSInterface.prototype.getOSInformation = function()\\n{\\n    var userAgent = navigator.userAgent;\\n\\n    if ((navigator.platform == \\\"Win32\\\") || (navigator.platform == \\\"Windows\\\"))\\n    {\\n        var winVersion = \\\"Windows\\\";\\n        var winBit = \\\"\\\";\\n        if (userAgent.indexOf(\\\"Windows\\\") > -1)\\n        {\\n            if (userAgent.indexOf(\\\"Windows NT 5.0\\\") > -1)\\n            {\\n                winVersion = \\\"Windows 2000\\\";\\n            }\\n            else if (userAgent.indexOf(\\\"Windows NT 5.1\\\") > -1)\\n            {\\n                winVersion = \\\"Windows XP\\\";\\n            }\\n            else if (userAgent.indexOf(\\\"Windows NT 5.2\\\") > -1)\\n            {\\n                winVersion = \\\"Windows Server 2003\\\";\\n            }\\n            else if (userAgent.indexOf(\\\"Windows NT 6.0\\\") > -1)\\n            {\\n                winVersion = \\\"Windows Vista\\\";\\n            }\\n            else if (userAgent.indexOf(\\\"Windows NT 6.1\\\") > -1)\\n            {\\n                winVersion = \\\"Windows 7\\\";\\n            }\\n            else if (userAgent.indexOf(\\\"Windows NT 6.2\\\") > -1)\\n            {\\n                winVersion = \\\"Windows 8\\\";\\n            }\\n            else if (userAgent.indexOf(\\\"Windows NT 6.3\\\") > -1)\\n            {\\n                winVersion = \\\"Windows 8.1\\\";\\n            }\\n            else if (userAgent.indexOf(\\\"Windows NT 10\\\") > -1)\\n            {\\n                winVersion = \\\"Windows 10\\\";\\n            }\\n\\n            if (userAgent.indexOf(\\\"WOW64\\\") > -1 || userAgent.indexOf(\\\"Win64\\\") > -1)\\n            {\\n                winBit = \\\" 64-bit\\\";\\n            }\\n            else\\n            {\\n                winBit = \\\" 32-bit\\\";\\n            }\\n        }\\n\\n        return winVersion + winBit;\\n    }\\n    else if ((navigator.platform == \\\"MacIntel\\\") || (navigator.platform == \\\"Macintosh\\\"))\\n    {\\n        var result = \\\"Mac OS X\\\";\\n\\n        if (userAgent.indexOf(\\\"Mac OS X\\\") > -1)\\n        {\\n            result = userAgent.substring(userAgent.indexOf(\\\"Mac OS X\\\"), userAgent.indexOf(\\\")\\\"));\\n            result = result.replace(/_/g, \\\".\\\");\\n        }\\n\\n        return result;\\n    }\\n\\n    return \\\"Unknown Operation System\\\";\\n};\\n\\n/**\\n * Opens a page in the default system browser.\\n *\\n * Since 4.2.0\\n *\\n * @param url  The URL of the page/file to open, or the email address.\\n * Must use HTTP/HTTPS/file/mailto protocol. For example:\\n *   \\\"http://www.adobe.com\\\"\\n *   \\\"https://github.com\\\"\\n *   \\\"file:///C:/log.txt\\\"\\n *   \\\"mailto:test@adobe.com\\\"\\n *\\n * @return One of these error codes:\\\\n\\n *      <ul>\\\\n\\n *          <li>NO_ERROR - 0</li>\\\\n\\n *          <li>ERR_UNKNOWN - 1</li>\\\\n\\n *          <li>ERR_INVALID_PARAMS - 2</li>\\\\n\\n *          <li>ERR_INVALID_URL - 201</li>\\\\n\\n *      </ul>\\\\n\\n */\\nCSInterface.prototype.openURLInDefaultBrowser = function(url)\\n{\\n    return cep.util.openURLInDefaultBrowser(url);\\n};\\n\\n/**\\n * Retrieves extension ID.\\n *\\n * Since 4.2.0\\n *\\n * @return extension ID.\\n */\\nCSInterface.prototype.getExtensionID = function()\\n{\\n     return window.__adobe_cep__.getExtensionId();\\n};\\n\\n/**\\n * Retrieves the scale factor of screen.\\n * On Windows platform, the value of scale factor might be different from operating system's scale factor,\\n * since host application may use its self-defined scale factor.\\n *\\n * Since 4.2.0\\n *\\n * @return One of the following float number.\\n *      <ul>\\\\n\\n *          <li> -1.0 when error occurs </li>\\\\n\\n *          <li> 1.0 means normal screen </li>\\\\n\\n *          <li> >1.0 means HiDPI screen </li>\\\\n\\n *      </ul>\\\\n\\n */\\nCSInterface.prototype.getScaleFactor = function()\\n{\\n    return window.__adobe_cep__.getScaleFactor();\\n};\\n\\n/**\\n * Retrieves the scale factor of Monitor.\\n *\\n * Since 8.5.0\\n *\\n * @return value >= 1.0f\\n * only available for windows machine\\n */\\n if(navigator.appVersion.toLowerCase().indexOf(\\\"windows\\\") >= 0) {\\n    CSInterface.prototype.getMonitorScaleFactor = function()\\n    {\\n        return window.__adobe_cep__.getMonitorScaleFactor();\\n    };\\n}\\n\\n/**\\n * Set a handler to detect any changes of scale factor. This only works on Mac.\\n *\\n * Since 4.2.0\\n *\\n * @param handler   The function to be called when scale factor is changed.\\n *\\n */\\nCSInterface.prototype.setScaleFactorChangedHandler = function(handler)\\n{\\n    window.__adobe_cep__.setScaleFactorChangedHandler(handler);\\n};\\n\\n/**\\n * Retrieves current API version.\\n *\\n * Since 4.2.0\\n *\\n * @return ApiVersion object.\\n *\\n */\\nCSInterface.prototype.getCurrentApiVersion = function()\\n{\\n    var apiVersion = JSON.parse(window.__adobe_cep__.getCurrentApiVersion());\\n    return apiVersion;\\n};\\n\\n/**\\n * Set panel flyout menu by an XML.\\n *\\n * Since 5.2.0\\n *\\n * Register a callback function for \\\"com.adobe.csxs.events.flyoutMenuClicked\\\" to get notified when a\\n * menu item is clicked.\\n * The \\\"data\\\" attribute of event is an object which contains \\\"menuId\\\" and \\\"menuName\\\" attributes.\\n *\\n * Register callback functions for \\\"com.adobe.csxs.events.flyoutMenuOpened\\\" and \\\"com.adobe.csxs.events.flyoutMenuClosed\\\"\\n * respectively to get notified when flyout menu is opened or closed.\\n *\\n * @param menu     A XML string which describes menu structure.\\n * An example menu XML:\\n * <Menu>\\n *   <MenuItem Id=\\\"menuItemId1\\\" Label=\\\"TestExample1\\\" Enabled=\\\"true\\\" Checked=\\\"false\\\"/>\\n *   <MenuItem Label=\\\"TestExample2\\\">\\n *     <MenuItem Label=\\\"TestExample2-1\\\" >\\n *       <MenuItem Label=\\\"TestExample2-1-1\\\" Enabled=\\\"false\\\" Checked=\\\"true\\\"/>\\n *     </MenuItem>\\n *     <MenuItem Label=\\\"TestExample2-2\\\" Enabled=\\\"true\\\" Checked=\\\"true\\\"/>\\n *   </MenuItem>\\n *   <MenuItem Label=\\\"---\\\" />\\n *   <MenuItem Label=\\\"TestExample3\\\" Enabled=\\\"false\\\" Checked=\\\"false\\\"/>\\n * </Menu>\\n *\\n */\\nCSInterface.prototype.setPanelFlyoutMenu = function(menu)\\n{\\n    if (\\\"string\\\" != typeof menu)\\n    {\\n        return;\\n    }\\n\\n    window.__adobe_cep__.invokeSync(\\\"setPanelFlyoutMenu\\\", menu);\\n};\\n\\n/**\\n * Updates a menu item in the extension window's flyout menu, by setting the enabled\\n * and selection status.\\n *\\n * Since 5.2.0\\n *\\n * @param menuItemLabel The menu item label.\\n * @param enabled       True to enable the item, false to disable it (gray it out).\\n * @param checked       True to select the item, false to deselect it.\\n *\\n * @return false when the host application does not support this functionality (HostCapabilities.EXTENDED_PANEL_MENU is false).\\n *         Fails silently if menu label is invalid.\\n *\\n * @see HostCapabilities.EXTENDED_PANEL_MENU\\n */\\nCSInterface.prototype.updatePanelMenuItem = function(menuItemLabel, enabled, checked)\\n{\\n    var ret = false;\\n    if (this.getHostCapabilities().EXTENDED_PANEL_MENU)\\n    {\\n        var itemStatus = new MenuItemStatus(menuItemLabel, enabled, checked);\\n        ret = window.__adobe_cep__.invokeSync(\\\"updatePanelMenuItem\\\", JSON.stringify(itemStatus));\\n    }\\n    return ret;\\n};\\n\\n\\n/**\\n * Set context menu by XML string.\\n *\\n * Since 5.2.0\\n *\\n * There are a number of conventions used to communicate what type of menu item to create and how it should be handled.\\n * - an item without menu ID or menu name is disabled and is not shown.\\n * - if the item name is \\\"---\\\" (three hyphens) then it is treated as a separator. The menu ID in this case will always be NULL.\\n * - Checkable attribute takes precedence over Checked attribute.\\n * - a PNG icon. For optimal display results please supply a 16 x 16px icon as larger dimensions will increase the size of the menu item.\\n     The Chrome extension contextMenus API was taken as a reference.\\n     https://developer.chrome.com/extensions/contextMenus\\n * - the items with icons and checkable items cannot coexist on the same menu level. The former take precedences over the latter.\\n *\\n * @param menu      A XML string which describes menu structure.\\n * @param callback  The callback function which is called when a menu item is clicked. The only parameter is the returned ID of clicked menu item.\\n *\\n * @description An example menu XML:\\n * <Menu>\\n *   <MenuItem Id=\\\"menuItemId1\\\" Label=\\\"TestExample1\\\" Enabled=\\\"true\\\" Checkable=\\\"true\\\" Checked=\\\"false\\\" Icon=\\\"./image/small_16X16.png\\\"/>\\n *   <MenuItem Id=\\\"menuItemId2\\\" Label=\\\"TestExample2\\\">\\n *     <MenuItem Id=\\\"menuItemId2-1\\\" Label=\\\"TestExample2-1\\\" >\\n *       <MenuItem Id=\\\"menuItemId2-1-1\\\" Label=\\\"TestExample2-1-1\\\" Enabled=\\\"false\\\" Checkable=\\\"true\\\" Checked=\\\"true\\\"/>\\n *     </MenuItem>\\n *     <MenuItem Id=\\\"menuItemId2-2\\\" Label=\\\"TestExample2-2\\\" Enabled=\\\"true\\\" Checkable=\\\"true\\\" Checked=\\\"true\\\"/>\\n *   </MenuItem>\\n *   <MenuItem Label=\\\"---\\\" />\\n *   <MenuItem Id=\\\"menuItemId3\\\" Label=\\\"TestExample3\\\" Enabled=\\\"false\\\" Checkable=\\\"true\\\" Checked=\\\"false\\\"/>\\n * </Menu>\\n */\\nCSInterface.prototype.setContextMenu = function(menu, callback)\\n{\\n    if (\\\"string\\\" != typeof menu)\\n    {\\n        return;\\n    }\\n\\n    window.__adobe_cep__.invokeAsync(\\\"setContextMenu\\\", menu, callback);\\n};\\n\\n/**\\n * Set context menu by JSON string.\\n *\\n * Since 6.0.0\\n *\\n * There are a number of conventions used to communicate what type of menu item to create and how it should be handled.\\n * - an item without menu ID or menu name is disabled and is not shown.\\n * - if the item label is \\\"---\\\" (three hyphens) then it is treated as a separator. The menu ID in this case will always be NULL.\\n * - Checkable attribute takes precedence over Checked attribute.\\n * - a PNG icon. For optimal display results please supply a 16 x 16px icon as larger dimensions will increase the size of the menu item.\\n     The Chrome extension contextMenus API was taken as a reference.\\n * - the items with icons and checkable items cannot coexist on the same menu level. The former take precedences over the latter.\\n     https://developer.chrome.com/extensions/contextMenus\\n *\\n * @param menu      A JSON string which describes menu structure.\\n * @param callback  The callback function which is called when a menu item is clicked. The only parameter is the returned ID of clicked menu item.\\n *\\n * @description An example menu JSON:\\n *\\n * {\\n *      \\\"menu\\\": [\\n *          {\\n *              \\\"id\\\": \\\"menuItemId1\\\",\\n *              \\\"label\\\": \\\"testExample1\\\",\\n *              \\\"enabled\\\": true,\\n *              \\\"checkable\\\": true,\\n *              \\\"checked\\\": false,\\n *              \\\"icon\\\": \\\"./image/small_16X16.png\\\"\\n *          },\\n *          {\\n *              \\\"id\\\": \\\"menuItemId2\\\",\\n *              \\\"label\\\": \\\"testExample2\\\",\\n *              \\\"menu\\\": [\\n *                  {\\n *                      \\\"id\\\": \\\"menuItemId2-1\\\",\\n *                      \\\"label\\\": \\\"testExample2-1\\\",\\n *                      \\\"menu\\\": [\\n *                          {\\n *                              \\\"id\\\": \\\"menuItemId2-1-1\\\",\\n *                              \\\"label\\\": \\\"testExample2-1-1\\\",\\n *                              \\\"enabled\\\": false,\\n *                              \\\"checkable\\\": true,\\n *                              \\\"checked\\\": true\\n *                          }\\n *                      ]\\n *                  },\\n *                  {\\n *                      \\\"id\\\": \\\"menuItemId2-2\\\",\\n *                      \\\"label\\\": \\\"testExample2-2\\\",\\n *                      \\\"enabled\\\": true,\\n *                      \\\"checkable\\\": true,\\n *                      \\\"checked\\\": true\\n *                  }\\n *              ]\\n *          },\\n *          {\\n *              \\\"label\\\": \\\"---\\\"\\n *          },\\n *          {\\n *              \\\"id\\\": \\\"menuItemId3\\\",\\n *              \\\"label\\\": \\\"testExample3\\\",\\n *              \\\"enabled\\\": false,\\n *              \\\"checkable\\\": true,\\n *              \\\"checked\\\": false\\n *          }\\n *      ]\\n *  }\\n *\\n */\\nCSInterface.prototype.setContextMenuByJSON = function(menu, callback)\\n{\\n    if (\\\"string\\\" != typeof menu)\\n    {\\n        return;\\n    }\\n\\n    window.__adobe_cep__.invokeAsync(\\\"setContextMenuByJSON\\\", menu, callback);\\n};\\n\\n/**\\n * Updates a context menu item by setting the enabled and selection status.\\n *\\n * Since 5.2.0\\n *\\n * @param menuItemID    The menu item ID.\\n * @param enabled       True to enable the item, false to disable it (gray it out).\\n * @param checked       True to select the item, false to deselect it.\\n */\\nCSInterface.prototype.updateContextMenuItem = function(menuItemID, enabled, checked)\\n{\\n    var itemStatus = new ContextMenuItemStatus(menuItemID, enabled, checked);\\n    ret = window.__adobe_cep__.invokeSync(\\\"updateContextMenuItem\\\", JSON.stringify(itemStatus));\\n};\\n\\n/**\\n * Get the visibility status of an extension window.\\n *\\n * Since 6.0.0\\n *\\n * @return true if the extension window is visible; false if the extension window is hidden.\\n */\\nCSInterface.prototype.isWindowVisible = function()\\n{\\n    return window.__adobe_cep__.invokeSync(\\\"isWindowVisible\\\", \\\"\\\");\\n};\\n\\n/**\\n * Resize extension's content to the specified dimensions.\\n * 1. Works with modal and modeless extensions in all Adobe products.\\n * 2. Extension's manifest min/max size constraints apply and take precedence.\\n * 3. For panel extensions\\n *    3.1 This works in all Adobe products except:\\n *        * Premiere Pro\\n *        * Prelude\\n *        * After Effects\\n *    3.2 When the panel is in certain states (especially when being docked),\\n *        it will not change to the desired dimensions even when the\\n *        specified size satisfies min/max constraints.\\n *\\n * Since 6.0.0\\n *\\n * @param width  The new width\\n * @param height The new height\\n */\\nCSInterface.prototype.resizeContent = function(width, height)\\n{\\n    window.__adobe_cep__.resizeContent(width, height);\\n};\\n\\n/**\\n * Register the invalid certificate callback for an extension.\\n * This callback will be triggered when the extension tries to access the web site that contains the invalid certificate on the main frame.\\n * But if the extension does not call this function and tries to access the web site containing the invalid certificate, a default error page will be shown.\\n *\\n * Since 6.1.0\\n *\\n * @param callback the callback function\\n */\\nCSInterface.prototype.registerInvalidCertificateCallback = function(callback)\\n{\\n    return window.__adobe_cep__.registerInvalidCertificateCallback(callback);\\n};\\n\\n/**\\n * Register an interest in some key events to prevent them from being sent to the host application.\\n *\\n * This function works with modeless extensions and panel extensions.\\n * Generally all the key events will be sent to the host application for these two extensions if the current focused element\\n * is not text input or dropdown,\\n * If you want to intercept some key events and want them to be handled in the extension, please call this function\\n * in advance to prevent them being sent to the host application.\\n *\\n * Since 6.1.0\\n *\\n * @param keyEventsInterest      A JSON string describing those key events you are interested in. A null object or\\n                                 an empty string will lead to removing the interest\\n *\\n * This JSON string should be an array, each object has following keys:\\n *\\n * keyCode:  [Required] represents an OS system dependent virtual key code identifying\\n *           the unmodified value of the pressed key.\\n * ctrlKey:  [optional] a Boolean that indicates if the control key was pressed (true) or not (false) when the event occurred.\\n * altKey:   [optional] a Boolean that indicates if the alt key was pressed (true) or not (false) when the event occurred.\\n * shiftKey: [optional] a Boolean that indicates if the shift key was pressed (true) or not (false) when the event occurred.\\n * metaKey:  [optional] (Mac Only) a Boolean that indicates if the Meta key was pressed (true) or not (false) when the event occurred.\\n *                      On Macintosh keyboards, this is the command key. To detect Windows key on Windows, please use keyCode instead.\\n * An example JSON string:\\n *\\n * [\\n *     {\\n *         \\\"keyCode\\\": 48\\n *     },\\n *     {\\n *         \\\"keyCode\\\": 123,\\n *         \\\"ctrlKey\\\": true\\n *     },\\n *     {\\n *         \\\"keyCode\\\": 123,\\n *         \\\"ctrlKey\\\": true,\\n *         \\\"metaKey\\\": true\\n *     }\\n * ]\\n *\\n */\\nCSInterface.prototype.registerKeyEventsInterest = function(keyEventsInterest)\\n{\\n    return window.__adobe_cep__.registerKeyEventsInterest(keyEventsInterest);\\n};\\n\\n/**\\n * Set the title of the extension window.\\n * This function works with modal and modeless extensions in all Adobe products, and panel extensions in Photoshop, InDesign, InCopy, Illustrator, Flash Pro and Dreamweaver.\\n *\\n * Since 6.1.0\\n *\\n * @param title The window title.\\n */\\nCSInterface.prototype.setWindowTitle = function(title)\\n{\\n    window.__adobe_cep__.invokeSync(\\\"setWindowTitle\\\", title);\\n};\\n\\n/**\\n * Get the title of the extension window.\\n * This function works with modal and modeless extensions in all Adobe products, and panel extensions in Photoshop, InDesign, InCopy, Illustrator, Flash Pro and Dreamweaver.\\n *\\n * Since 6.1.0\\n *\\n * @return The window title.\\n */\\nCSInterface.prototype.getWindowTitle = function()\\n{\\n    return window.__adobe_cep__.invokeSync(\\\"getWindowTitle\\\", \\\"\\\");\\n};\\n\"","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\nmodule.exports = function(src) {\n\tfunction log(error) {\n\t\t(typeof console !== \"undefined\")\n\t\t&& (console.error || console.log)(\"[Script Loader]\", error);\n\t}\n\n\t// Check for IE =< 8\n\tfunction isIE() {\n\t\treturn typeof attachEvent !== \"undefined\" && typeof addEventListener === \"undefined\";\n\t}\n\n\ttry {\n\t\tif (typeof execScript !== \"undefined\" && isIE()) {\n\t\t\texecScript(src);\n\t\t} else if (typeof eval !== \"undefined\") {\n\t\t\teval.call(null, src);\n\t\t} else {\n\t\t\tlog(\"EvalError: No eval function available\");\n\t\t}\n\t} catch (error) {\n\t\tlog(error);\n\t}\n}\n","require(\"!!/Users/miro/Dropbox/Dev/Photoshop/miro-prova-cep-webpack/node_modules/script-loader/addScript.js\")(require(\"!!/Users/miro/Dropbox/Dev/Photoshop/miro-prova-cep-webpack/node_modules/raw-loader/index.js!/Users/miro/Dropbox/Dev/Photoshop/miro-prova-cep-webpack/src/js/CSInterface.js\"))","\"use strict\";\n\nvar isOldIE = function isOldIE() {\n  var memo;\n  return function memorize() {\n    if (typeof memo === 'undefined') {\n      // Test for IE <= 9 as proposed by Browserhacks\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n      // Tests for existence of standard globals is to allow style-loader\n      // to operate correctly into non-standard environments\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\n      memo = Boolean(window && document && document.all && !window.atob);\n    }\n\n    return memo;\n  };\n}();\n\nvar getTarget = function getTarget() {\n  var memo = {};\n  return function memorize(target) {\n    if (typeof memo[target] === 'undefined') {\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n        try {\n          // This will throw an exception if access to iframe is blocked\n          // due to cross-origin restrictions\n          styleTarget = styleTarget.contentDocument.head;\n        } catch (e) {\n          // istanbul ignore next\n          styleTarget = null;\n        }\n      }\n\n      memo[target] = styleTarget;\n    }\n\n    return memo[target];\n  };\n}();\n\nvar stylesInDom = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDom.length; i++) {\n    if (stylesInDom[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var index = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3]\n    };\n\n    if (index !== -1) {\n      stylesInDom[index].references++;\n      stylesInDom[index].updater(obj);\n    } else {\n      stylesInDom.push({\n        identifier: identifier,\n        updater: addStyle(obj, options),\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction insertStyleElement(options) {\n  var style = document.createElement('style');\n  var attributes = options.attributes || {};\n\n  if (typeof attributes.nonce === 'undefined') {\n    var nonce = typeof __webpack_nonce__ !== 'undefined' ? __webpack_nonce__ : null;\n\n    if (nonce) {\n      attributes.nonce = nonce;\n    }\n  }\n\n  Object.keys(attributes).forEach(function (key) {\n    style.setAttribute(key, attributes[key]);\n  });\n\n  if (typeof options.insert === 'function') {\n    options.insert(style);\n  } else {\n    var target = getTarget(options.insert || 'head');\n\n    if (!target) {\n      throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n    }\n\n    target.appendChild(style);\n  }\n\n  return style;\n}\n\nfunction removeStyleElement(style) {\n  // istanbul ignore if\n  if (style.parentNode === null) {\n    return false;\n  }\n\n  style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */\n\n\nvar replaceText = function replaceText() {\n  var textStore = [];\n  return function replace(index, replacement) {\n    textStore[index] = replacement;\n    return textStore.filter(Boolean).join('\\n');\n  };\n}();\n\nfunction applyToSingletonTag(style, index, remove, obj) {\n  var css = remove ? '' : obj.media ? \"@media \".concat(obj.media, \" {\").concat(obj.css, \"}\") : obj.css; // For old IE\n\n  /* istanbul ignore if  */\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = replaceText(index, css);\n  } else {\n    var cssNode = document.createTextNode(css);\n    var childNodes = style.childNodes;\n\n    if (childNodes[index]) {\n      style.removeChild(childNodes[index]);\n    }\n\n    if (childNodes.length) {\n      style.insertBefore(cssNode, childNodes[index]);\n    } else {\n      style.appendChild(cssNode);\n    }\n  }\n}\n\nfunction applyToTag(style, options, obj) {\n  var css = obj.css;\n  var media = obj.media;\n  var sourceMap = obj.sourceMap;\n\n  if (media) {\n    style.setAttribute('media', media);\n  } else {\n    style.removeAttribute('media');\n  }\n\n  if (sourceMap && btoa) {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    while (style.firstChild) {\n      style.removeChild(style.firstChild);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar singleton = null;\nvar singletonCounter = 0;\n\nfunction addStyle(obj, options) {\n  var style;\n  var update;\n  var remove;\n\n  if (options.singleton) {\n    var styleIndex = singletonCounter++;\n    style = singleton || (singleton = insertStyleElement(options));\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n  } else {\n    style = insertStyleElement(options);\n    update = applyToTag.bind(null, style, options);\n\n    remove = function remove() {\n      removeStyleElement(style);\n    };\n  }\n\n  update(obj);\n  return function updateStyle(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n        return;\n      }\n\n      update(obj = newObj);\n    } else {\n      remove();\n    }\n  };\n}\n\nmodule.exports = function (list, options) {\n  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n  // tags it will allow on a page\n\n  if (!options.singleton && typeof options.singleton !== 'boolean') {\n    options.singleton = isOldIE();\n  }\n\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    if (Object.prototype.toString.call(newList) !== '[object Array]') {\n      return;\n    }\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDom[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDom[_index].references === 0) {\n        stylesInDom[_index].updater();\n\n        stylesInDom.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./index.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","import 'script-loader!./CSInterface.js'; // Execute JS script once in global context\n\nimport {writeCiaoInRoot} from './utils';\n\nimport '../assets/style/index.scss';\n\nvar csInterface = new CSInterface();\n\nwriteCiaoInRoot();\n","function writeCiaoInRoot() {\n    var root = document.querySelector(\"#root\");\n    root.innerHTML = 'CIAO2!';\n}\n\nmodule.exports = {\n    writeCiaoInRoot\n}"],"sourceRoot":""}